import os
from dotenv import load_dotenv
import yaml
from entities.Blogpost import Blogpost

load_dotenv("config/environment_variables.env")



def generate_markdown_file(blogpost):
    """Generate a markdown file from a Blogpost object"""
    try:
        # Ensure output directory exists
        markdown_path = os.getenv("MARKDOWN_PATH")
        os.makedirs(markdown_path, exist_ok=True)

        # Define filename
        slug = blogpost.slug
        filename = f"{slug}.md"
        filepath = os.path.join(markdown_path, filename)

        # Create front matter (YAML metadata)
        front_matter = {
            "layout": "post",
            "title": blogpost.blogpost_metadata.title,
            "subtitle": blogpost.blogpost_metadata.subtitle,
            "date": blogpost.blogpost_metadata.date,
            "author": blogpost.blogpost_metadata.author,
            "image": blogpost.blogpost_metadata.image,
            "slug": blogpost.blogpost_metadata.slug,
            "description": blogpost.blogpost_metadata.description
        }

        # Convert front matter to YAML format
        front_matter_yaml = yaml.dump(front_matter, default_flow_style=False, sort_keys=False)

        # Write Markdown file
        with open(filepath, "w", encoding="utf-8") as file:
            file.write("---\n")
            file.write(front_matter_yaml)
            file.write("---\n\n")
            file.write(blogpost.content)

        return filepath
    except Exception as e:
        print(f"An error occurred: {e}")
        return None