name: AI News Automation

on:
  schedule:
    - cron: '0 17 * * 0'  # Sunday at 5 PM UTC
    - cron: '0 8 * * 3'   # Wednesday at 8 AM UTC
  workflow_dispatch:  # Allows manual trigger
    inputs:
      day:
        description: "Manually set the execution day (e.g., Sunday, Wednesday)"
        required: false
        default: ""

jobs:
  generate-news:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "GMAIL_EMAIL=${{ secrets.GMAIL_EMAIL }}" >> $GITHUB_ENV
          echo "OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}" >> $GITHUB_ENV
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          echo "BLOG_REPOSITORY_URL_HTTPS=${{ secrets.BLOG_REPOSITORY_URL_HTTPS }}" >> $GITHUB_ENV
          echo "BLOG_REPOSITORY_PATH=${{ secrets.BLOG_REPOSITORY_PATH }}" >> $GITHUB_ENV
          echo "OWNER=${{ secrets.OWNER }}" >> $GITHUB_ENV
          echo "OWNER_EMAIL=${{ secrets.OWNER_EMAIL }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ secrets.REPO_NAME }}" >> $GITHUB_ENV
      
      - name: Create credentials.json
        run: |
          echo "${{ secrets.GMAIL_CREDENTIALS_JSON }}" | base64 --decode > credentials.json
  
      - name: Restore token.pickle
        run: |
          echo "${{ secrets.GMAIL_TOKEN_PICKLE }}" | base64 --decode > token.pickle

      - name: Determine Execution Day
        id: set_day
        run: |
          if [ -z "${{ github.event.inputs.day }}" ]; then
            echo "DAY=$(date +%A)" >> $GITHUB_ENV
          else
            echo "DAY=${{ github.event.inputs.day }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Clone Blog Repository
        run: git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ secrets.OWNER }}/News-summary-blog.git blog_repo

      - name: Debug GitHub Actions Working Directory
        run: |
          echo "Current Working Directory:"
          pwd
          echo "Home Directory Structure:"
          ls -lah /home/runner/work/
          echo "Project Directory Structure:"
          ls -lah /home/runner/work/Ai-news-summarizer/
          echo "Inside the Cloned Repository:"
          ls -lah /home/runner/work/Ai-news-summarizer/Ai-news-summarizer/

      - name: Run Newsletter Fetch & Blog Generation
        run: python main.py --day "$DAY"
        env:
          DAY: ${{ env.DAY }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          GMAIL_EMAIL: ${{ env.GMAIL_EMAIL }}
          OPENAI_MODEL: ${{ env.OPENAI_MODEL }}
          GH_TOKEN: ${{ env.GH_TOKEN }}
          BLOG_REPOSITORY_URL_HTTPS: ${{ env.BLOG_REPOSITORY_URL_HTTPS }}
          BLOG_REPOSITORY_PATH: ${{ github.workspace }}/blog_repo
          OWNER: ${{ env.OWNER }}
          OWNER_EMAIL: ${{ env.OWNER_EMAIL }}
          REPO_NAME: ${{ env.REPO_NAME }}

      - name: Fix Git Submodule Issue (Remove `blog_repo` if it's a submodule)
        run: |
          if [ -d "blog_repo/.git" ]; then
            echo "Removing blog_repo as a submodule..."
            git submodule deinit -f blog_repo || echo "No submodule to deinit"
            git rm --cached blog_repo || echo "No submodule to remove"
            rm -rf .git/modules/blog_repo || echo "No module metadata to remove"
            rm -rf blog_repo || echo "No blog_repo directory to remove"
            mkdir blog_repo
          else
            echo "blog_repo is not a submodule or is already removed. Skipping."
          fi
        
      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -f *.db
          git add .
          git commit -m "Automated News Summary for $DAY" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
        env:
          DAY: ${{ env.DAY }}